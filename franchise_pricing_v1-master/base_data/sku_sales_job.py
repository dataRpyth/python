#!/usr/bin/env python
# -*- coding:utf-8 -*-

import os
import sys
import warnings
from os.path import join as join_path

cur_path = os.path.dirname(os.path.realpath(__file__))
sys.path.append(join_path(cur_path, '..'))
warnings.filterwarnings("ignore")

from common.job_base.job_base import JobBase
from common.util.utils import *
import pandas as pd


class SkuSalesJob(JobBase):

    def __init__(self, job_config):
        JobBase.__init__(self, job_config)

    def get_job_name(self):
        return 'BaseDataJob'

    def run(self):
        config = self.get_job_config()

        DateUtil.init_preset_time()

        all_hotels_list = ['CN_HUI033',
                           'CN_ZHJ1002',
                           'CN_ZHJ010',
                           'CN_NAP1004',
                           'CN_GGU045',
                           'CN_FZH1013',
                           'CN_KMG057',
                           'CN_ZHJ1006',
                           'CN_BAI022',
                           'CN_GGU004',
                           'CN_ZHJ1007',
                           'CN_KMG020',
                           'CN_DGN054',
                           'CN_KMG031',
                           'CN_NAI018',
                           'CN_NIN010',
                           'CN_XMN001',
                           'CN_XMN1026',
                           'CN_KMG045',
                           'CN_HUI003',
                           'CN_DGN1014',
                           'CN_DGN1015',
                           'CN_NAI1003',
                           'CN_HKU072',
                           'CN_XMN015',
                           'CN_QUA1017',
                           'CN_NAP002',
                           'CN_NAP1007',
                           'CN_BEI1031',
                           'CN_XMN1017',
                           'CN_ZNG1001',
                           'CN_GGU1039',
                           'CN_QUA1018',
                           'CN_SZX198',
                           'CN_FZH053',
                           'CN_KMG043',
                           'CN_HKU001',
                           'CN_SZX1069',
                           'CN_DNZ006',
                           'CN_LIJ015',
                           'CN_NAI1002',
                           'CN_HKU032',
                           'CN_KMG1045',
                           'CN_SZX012',
                           'CN_HKU1017',
                           'CN_SHN008',
                           'CN_SHN004',
                           'CN_XMN1027',
                           'CN_KMG1040',
                           'CN_KMG1041',
                           'CN_YNU1056',
                           'CN_HKU1019',
                           'CN_HKU1020',
                           'CN_QUA019',
                           'CN_GGU044',
                           'CN_XAN1098',
                           'CN_KMG1049',
                           'CN_XAN1095',
                           'CN_GGU149',
                           'CN_BEI1034',
                           'CN_JIL026',
                           'CN_HFI087',
                           'CN_SNA1018',
                           'CN_ZNG1005',
                           'CN_KMG091',
                           'CN_HEY1007',
                           'CN_XAN157',
                           'CN_NJG093',
                           'CN_WZH1029',
                           'CN_KMG1043',
                           'CN_CHA1002',
                           'CN_HFI1036',
                           'CN_XAN060',
                           'CN_HFI1034',
                           'CN_NJG076',
                           'CN_BAH1001',
                           'CN_QIA009',
                           'CN_WZH033',
                           'CN_LUY027',
                           'CN_HOH1003',
                           'CN_XAN164',
                           'CN_KMG003',
                           'CN_SUZ1015',
                           'CN_NCH072',
                           'CN_CHA1014',
                           'CN_CHO002',
                           'CN_GGU132',
                           'CN_XHU036',
                           'CN_QAX1003',
                           'CN_CGD1033',
                           'CN_XAN1108',
                           'CN_LIA025',
                           'CN_ANK1010',
                           'CN_HUZ009',
                           'CN_CHO001',
                           'CN_TNJ1017',
                           'CN_XAN1125',
                           'CN_DLI1047',
                           'CN_CCN075',
                           'CN_HEN1015',
                           'CN_HFI1035',
                           'CN_SNA1019',
                           'CN_WZH005',
                           'CN_XAN1090',
                           'CN_YNG015',
                           'CN_HUL1013',
                           'CN_LOG1002',
                           'CN_YNU015',
                           'CN_BAY1003',
                           'CN_GUA013',
                           'CN_LNZ036',
                           'CN_CGD1030',
                           'CN_XHU011',
                           'CN_XAN018',
                           'CN_TAN013',
                           'CN_XAN1114',
                           'CN_HUZ012',
                           'CN_CCN1052',
                           'CN_QIH003',
                           'CN_TNJ1016',
                           'CN_SZX104',
                           'CN_WZH040',
                           'CN_WZH039',
                           'CN_TNJ1010',
                           'CN_ZHI1005',
                           'CN_GUI1026',
                           'CN_XAN1007',
                           'CN_JGD1004',
                           'CN_JIX1015',
                           'CN_LVL1001',
                           'CN_SZX015',
                           'CN_YUL011',
                           'CN_LNZ1015',
                           'CN_CHA1015',
                           'CN_TNJ1026',
                           'CN_WUH002',
                           'CN_ZGU098',
                           'CN_YIB008',
                           'CN_NJG1020',
                           'CN_HAZ1008',
                           'CN_XAN014',
                           'CN_NCH1013',
                           'CN_JGD003',
                           'CN_LUY037',
                           'CN_LNZ1020',
                           'CN_BEI063',
                           'CN_KMG002',
                           'CN_XAN1116',
                           'CN_XNG1013',
                           'CN_FOS070',
                           'CN_YNU1042',
                           'CN_CHA1005',
                           'CN_QGO1035',
                           'CN_XAN183',
                           'CN_XAN070',
                           'CN_QIN1001',
                           'CN_LOG1001',
                           'CN_XAN001',
                           'CN_QGO1014',
                           'CN_TNJ052',
                           'CN_JIU019',
                           'CN_BAT1012',
                           'CN_KMG035',
                           'CN_BEI1035',
                           'CN_QUA053',
                           'CN_XMN067',
                           'CN_SHU1014',
                           'CN_QGO1029',
                           'CN_NJG067',
                           'CN_LOG1007',
                           'CN_QGO1038',
                           'CN_YNG014',
                           'CN_NJG083',
                           'CN_NJG034',
                           'CN_CCN018',
                           'CN_FUS1021',
                           'CN_HUB1002',
                           'CN_XNA1005',
                           'CN_FUS1013',
                           'CN_NBO1026',
                           'CN_HRB1067',
                           'CN_NJG108',
                           'CN_NJG099',
                           'CN_YNU1060',
                           'CN_HFI021',
                           'CN_ANQ013',
                           'CN_XNG1012',
                           'CN_NAI015',
                           'CN_NCH1007',
                           'CN_XAN1128',
                           'CN_HUH1006',
                           'CN_CAO1007',
                           'CN_JIZ020',
                           'CN_KMG087',
                           'CN_WEH1023',
                           'CN_NEI001',
                           'CN_PIN1011',
                           'CN_LOU002',
                           'CN_SZU1026',
                           'CN_NCH028',
                           'CN_LNZ1019',
                           'CN_ZHG1010',
                           'CN_SZX032',
                           'CN_NAI012',
                           'CN_YUI1005',
                           'CN_LIN013',
                           'CN_BOD1012',
                           'CN_WEI1007',
                           'CN_FUZ1004',
                           'CN_WZH1033',
                           'CN_SHA1021',
                           'CN_HFI1039',
                           'CN_CCN1056',
                           'CN_HUZ1011',
                           'CN_QGO073',
                           'CN_YNG1011',
                           'CN_FUY1023',
                           'CN_ZHA1039',
                           'CN_TNJ053',
                           'CN_HUI017',
                           'CN_NBO1006',
                           'CN_SNA041',
                           'CN_TOG004',
                           'CN_YNU1059',
                           'CN_XHU052',
                           'CN_YNG1005',
                           'CN_SHU1010',
                           'CN_LNZ037',
                           'CN_URU014',
                           'CN_ANQ006',
                           'CN_LIN032']

        hotels_in_hive_list = ['CN_LIJ1033',
                               'CN_ZNG1005',
                               'CN_ZHJ1008',
                               'CN_ZHJ1007',
                               'CN_XMN001',
                               'CN_HFI087',
                               'CN_XAN164',
                               'CN_GGU044',
                               'CN_KMG031',
                               'CN_XMN015',
                               'CN_XMN1026',
                               'CN_KMG057',
                               'CN_QUA1016',
                               'CN_NAP002',
                               'CN_HUI033',
                               'CN_BAI022',
                               'CN_NJG093',
                               'CN_QUA1013',
                               'CN_LIJ023',
                               'CN_NJG076',
                               'CN_GGU004',
                               'CN_HKU001',
                               'CN_ZHJ010',
                               'CN_HFI1036',
                               'CN_SZX1069',
                               'CN_NAP1004',
                               'CN_LIJ1037',
                               'CN_SZX015',
                               'CN_HKU1020',
                               'CN_KMG043',
                               'CN_ZNG1001',
                               'CN_LIJ1032',
                               'CN_HUI003',
                               'CN_NAI018',
                               'CN_SHN008',
                               'CN_LIJ1035',
                               'CN_KMG091',
                               'CN_GGU149',
                               'CN_CHA1002',
                               'CN_XMN1027',
                               'CN_KMG1049',
                               'CN_FZH1013',
                               'CN_ZHJ1006',
                               'CN_HEY1007',
                               'CN_JIL026',
                               'CN_XAN060',
                               'CN_ZHJ1002',
                               'CN_SHN004',
                               'CN_SZX198',
                               'CN_GGU123',
                               'CN_QIA009',
                               'CN_YNU1056',
                               'CN_XAN1098',
                               'CN_XAN157',
                               'CN_KMG1045',
                               'CN_NAP1007',
                               'CN_KMG020',
                               'CN_LIJ046',
                               'CN_XMN1017',
                               'CN_DGN1014',
                               'CN_NIN010',
                               'CN_NAI1002',
                               'CN_SAN017',
                               'CN_HKU072',
                               'CN_BAH1001',
                               'CN_KMG1041',
                               'CN_KMG045',
                               'CN_HFI1034',
                               'CN_BEI1034',
                               'CN_HKU1017',
                               'CN_LIJ015',
                               'CN_NAP1008',
                               'CN_YAG014',
                               'CN_BEI1031',
                               'CN_FZH053',
                               'CN_WZH033',
                               'CN_QUA1017',
                               'CN_LUY027',
                               'CN_DNZ006',
                               'CN_LIJ1036',
                               'CN_HKU1019',
                               'CN_HKU032',
                               'CN_DGN1015',
                               'CN_QUA1018',
                               'CN_SZX012',
                               'CN_QUA019',
                               'CN_DGN054',
                               'CN_KMG1040',
                               'CN_LIJ048',
                               'CN_HOH1003',
                               'CN_GGU045',
                               'CN_GGU1039',
                               'CN_NAI1003',
                               'CN_XAN1095']

        all_hotels_set = set(all_hotels_list)

        hotels_in_hive_set = set(hotels_in_hive_list)

        remaining_hotels = all_hotels_set.difference(hotels_in_hive_set)

        oyo_id_list = ['CN_HUI033',
                       'CN_ZHJ1002',
                       'CN_ZHJ010',
                       'CN_NAP1004',
                       'CN_LIJ048',
                       'CN_GGU045',
                       'CN_FZH1013',
                       'CN_KMG057',
                       'CN_ZHJ1006',
                       'CN_BAI022',
                       'CN_GGU004',
                       'CN_ZHJ1007',
                       'CN_LIJ023',
                       'CN_LIJ1032',
                       'CN_KMG020',
                       'CN_DGN054',
                       'CN_KMG031',
                       'CN_NAI018',
                       'CN_LIJ046',
                       'CN_NAP1008',
                       'CN_NIN010',
                       'CN_XMN001',
                       'CN_XMN1026',
                       'CN_KMG045',
                       'CN_HUI003',
                       'CN_LIJ1033',
                       'CN_DGN1014',
                       'CN_DGN1015',
                       'CN_NAI1003',
                       'CN_SAN017',
                       'CN_HKU072',
                       'CN_XMN015',
                       'CN_QUA1016',
                       'CN_QUA1017',
                       'CN_LIJ1036',
                       'CN_NAP002',
                       'CN_NAP1007',
                       'CN_QUA1013',
                       'CN_LIJ1037',
                       'CN_BEI1031',
                       'CN_ZHJ1008',
                       'CN_YAG014',
                       'CN_XMN1017',
                       'CN_ZNG1001',
                       'CN_GGU1039',
                       'CN_QUA1018',
                       'CN_LIJ1035',
                       'CN_SZX198',
                       'CN_FZH053',
                       'CN_KMG043',
                       'CN_GGU123',
                       'CN_HKU001',
                       'CN_SZX1069',
                       'CN_DNZ006',
                       'CN_LIJ015',
                       'CN_NAI1002',
                       'CN_HKU032',
                       'CN_KMG1045',
                       'CN_SZX012',
                       'CN_HKU1017',
                       'CN_SHN008',
                       'CN_SHN004',
                       'CN_XMN1027',
                       'CN_KMG1040',
                       'CN_KMG1041',
                       'CN_SZX015',
                       'CN_YNU1056',
                       'CN_HKU1019',
                       'CN_HKU1020',
                       'CN_QUA019',
                       'CN_GGU044',
                       'CN_XAN1098',
                       'CN_KMG1049']

        oyo_id_series = pd.DataFrame({'oyo_id': oyo_id_list}).oyo_id

        all_hotels_str = MiscUtil.convert_list_to_tuple_list_str(hotels_in_hive_list)

        start_date = '2019-07-03'

        end_date = '2019-07-03'

        sku_sales_query = """
            select oyo_id,
                   sku.hotel_id,
                   room_type_id,
                   sku_date,
                   channel_id,
                   booking_date,
                   booking_hour,
                   sku_count,
                   total_gmv,
                   price,
                   date_format(now(), '%%Y-%%m-%%d %%H:%%i:%%s') as create_time
            from (select hotel_id,
                         room_type_id,
                         sku_date,
                         channel_id,
                         booking_date,
                         booking_hour,
                         count(1)              as sku_count,
                         sum(price)            as total_gmv,
                         sum(price) / count(1) as price
                  from (
                         select hotel_id,
                                room_type_id,
                                sku_date,
                                source                                    as channel_id,
                                date_format(real_create_time, '%%Y-%%m-%%d') as booking_date,
                                date_format(real_create_time, '%%k')       as booking_hour,
                                price
                         from (select raw_room.order_id,
                                      hotel_id,
                                      case when `date` is null then checkin else date_format(`date`, '%%Y-%%m-%%d') end as sku_date,
                                      checkin,
                                      check_in_time,
                                      real_checkout_time,
                                      real_checkout_date,
                                      check_out_time,
                                      check_out,
                                      amount,
                                      actual_amount,
                                      source,
                                      booking_id,
                                      room_type_id,
                                      price
                               from (
                                      select id                                                 as order_id,
                                             hotel_id,
                                             date_format(check_in, '%%Y-%%m-%%d')                  as checkin,
                                             date_format(check_out, '%%Y-%%m-%%d')                 as checkout,
                                             check_in_time,
                                             case
                                               when check_out_time is null or date_format(check_out_time, '%%Y-%%m-%%d') < '2015-11-10'
                                                 then check_out
                                               else check_out_time end                          as real_checkout_time,
                                             date_format(case
                                                           when check_out_time is null or
                                                                date_format(check_out_time, '%%Y-%%m-%%d') < '2015-11-10'
                                                             then check_out
                                                           else check_out_time end, '%%Y-%%m-%%d') as real_checkout_date,
                                             check_out_time,
                                             check_out,
                                             amount,
                                             actual_amount,
                                             source,
                                             booking_id
                                      from trade_room_reservation
                                      where status in (0, 1, 2, 4)
                                        and type <> 2 -- exclude hourly rooms
                                        and date_format(check_in, '%%Y-%%m-%%d') <> date_format(check_out, '%%Y-%%m-%%d')
                                        and is_deleted = 0
                                        and date_format(create_time, '%%Y-%%m-%%d') between '{1}' and '{2}'
                                        and hotel_id in (select id as hotel_id
                                                         from product_hotel
                                                         where oyo_id in {0})) raw_room
                                      left join (select date from oyoprod_calendar) calendar
                                                on raw_room.checkin <= calendar.date and calendar.date < raw_room.real_checkout_date
                                      left join (select order_id,
                                                        room_type  as room_type_id,
                                                        is_deleted as room_detail_is_deleted
                                                 from trade_room_reservation_room_detail) room_detail
                                                on raw_room.order_id = room_detail.order_id
                                      left join (select order_id,
                                                        date_format(date, '%%Y-%%m-%%d') as biz_date,
                                                        price,
                                                        is_deleted                    as room_price_is_deleted
                                                 from trade_room_reservation_room_price) room_price
                                                on raw_room.order_id = room_price.order_id and
                                                   raw_room.checkin = room_price.biz_date
                               where room_detail_is_deleted = 0
                                 and room_price_is_deleted = 0) room_info
                                left join (select id                            as booking_id,
                                                  source_create_time,
                                                  create_time,
                                                  case
                                                    when source_create_time is null or
                                                         date_format(source_create_time, '%%Y-%%m-%%d') < '2015-11-10'
                                                      then create_time
                                                    else source_create_time end as real_create_time,
                                                  is_deleted                    as booking_is_deleted,
                                                  type                          as booking_type
                                           from trade_booking) booking on room_info.booking_id = booking.booking_id
                         where booking_is_deleted = 0) a
                  group by a.hotel_id, a.room_type_id, a.sku_date, a.booking_date, a.booking_hour, a.channel_id) sku
                   left join (select id as hotel_id, oyo_id
                              from product_hotel
                              where oyo_id in {0}) hotel on sku.hotel_id = hotel.hotel_id
        """.format(all_hotels_str, start_date, end_date)

        sku_sales_df = self.get_adb_query_manager().read_sql(sku_sales_query, 300)

        LogUtil.get_cur_logger().info('price history data frame generated')

        output_file_name = 'sku_sales_{0}_{1}.csv'.format(start_date, end_date)

        file_path = join_path(cur_path, 'log', output_file_name)

        sku_sales_df.to_csv(file_path, index=False)
